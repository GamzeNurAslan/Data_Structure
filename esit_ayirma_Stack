package com.mycompany.project_stack3;
import java.util.Stack;
    class LinkedStack {
    private static class Node {
        int data;
        Node next;
        
        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }
    
    private Node top;  
    
    public LinkedStack() {
        top = null;
    }
    
    public void push(int data) {
        Node yeni = new Node(data);
        yeni.next = top;
        top = yeni;
    }
    
    public int pop() {
        if (top == null) {
            throw new IllegalStateException("Yığıt boş!");
        }
        int data = top.data;
        top = top.next;
        return data;
    }
    
    public void yazdir() {
        Node current = top;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }
    
    public LinkedStack[] ayir() {
        LinkedStack[] result = new LinkedStack[2];
        result[0] = new LinkedStack();
        result[1] = new LinkedStack();
        
        if (top == null) {
            return result;
        }
        
        int size = 0;
        Node current = top;
        while (current != null) {
            size++;
            current = current.next;
        }
        
        current = top;
        int mid = size / 2;
        for (int i = 0; i < mid; i++) {
            result[0].push(current.data);
            current = current.next;
        }
        
        while (current != null) {
            result[1].push(current.data);
            current = current.next;
        }
        
        return result;
    }
}

public class Project_stack3 {
    public static void main(String[] args) {
        LinkedStack stack = new LinkedStack();
        
        stack.push(10);
        stack.push(20);
        stack.push(30);
        stack.push(40);
        stack.push(50);
        stack.push(60);
        
        System.out.println("Orijinal Yığıt:");
        stack.yazdir(); 
        
        LinkedStack[] ayirStacks = stack.ayir();
        
        System.out.println("Birinci Yığıt:");
        ayirStacks[0].yazdir();
        
        System.out.println("İkinci Yığıt:");
        ayirStacks[1].yazdir();
    }
}
